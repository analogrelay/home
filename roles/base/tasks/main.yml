- name: Configure user/group
  become: true
  block:
    - name: Create admin group
      group:
        name: admin
        state: present
    
    - name: Create users
      user:
        name: "{{ item.name }}"
        comment: "{{ item.comment }}"
        groups: "{{ item.groups }}"
        append: true
        create_home: true
      with_items:
        - name: abby
          comment: Abigail Stanton-Nurse
          groups: admin
    
    - name: Configure SSH
      ansible.posix.authorized_key:
        key: "{{ item.key }}"
        user: "{{ item.user }}"
      with_items:
        - user: abby
          key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBjy0nnqPOijeAW1jA4a3e++tiKU7fWaXOkayfMypKs3"

- name: Configure APT Repos
  become: true
  when: ansible_distribution_file_variety == "Debian"
  block:
    - name: Install transport prereqs
      apt:
        pkg:
          - ca-certificates

    - name: Fetch keys
      get_url:
        url: "{{ item.url }}"
        dest: "/etc/apt/trusted.gpg.d/{{ item.name }}.asc"
      with_items:
        - url: https://download.docker.com/linux/ubuntu/gpg
          name: docker

    - name: Add repos
      apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - "deb [arch={{ debian_arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    
    - name: Update cache
      apt:
        update_cache: true

- name: Install packages
  become: true
  when: ansible_distribution_file_variety == "Debian"
  apt:
    pkg:
      - unzip
      - curl
      - lsb-release
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
      - cifs-utils

- name: Configure Prometheus Node Exporter
  block:
    - name: Check if Node Exporter binaries exist
      stat:
        path: "/usr/local/bin/node_exporter"
      register: preexisting_node_exporter

    - name: Install Node Exporter
      when: preexisting_node_exporter.stat.exists != true
      block:
        - name: Fetch Node Exporter
          get_url:
            url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}.tar.gz"
            dest: /tmp/node_exporter.tar.gz
            mode: 0777
        
        - name: Unpack Node Exporter
          unarchive:
            src: /tmp/node_exporter.tar.gz
            dest: /tmp
            creates: /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}/node_exporter
            remote_src: yes
        
        - name: Install Node Exporter
          become: true
          copy:
            src: /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}/node_exporter
            dest: /usr/local/bin
            mode: u=rwx,g=rx,o=rx
            remote_src: yes

        - name: Clean up
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - /tmp/node_exporter.tar.gz
            - /tmp/node_exporter-{{ node_exporter_version }}.linux-{{ node_exporter_arch }}

    - name: Install systemd service
      become: true
      copy:
        src: node_exporter.service
        dest: "/etc/systemd/system/node_exporter.service"
        mode: 644
      notify:
        - Restart Node Exporter

    - name: Enable Node Exporter
      become: true
      service:
        name: node_exporter
        enabled: true
        state: started

- name: Configure Data Volume
  become: true
  block:
    - name: Ensure Mount Point
      file:
        path: /mnt/cluster
        state: directory
        mode: '0775'
        owner: root
        group: admin

    - name: Mount SMB Share
      ansible.posix.mount:
        src: "//cid.local.analogrelay.net/cluster"
        path: "/mnt/cluster"
        fstype: cifs
        opts: "credentials=/etc/smb-credentials.txt,gid=admin,file_mode=0775,dir_mode=0775,rw"
        state: mounted