apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-data
  namespace: home-db 
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - dir_mode=0750
    - file_mode=0750
    - vers=3.0
    - uid=70
    - gid=70
  csi:
    driver: smb.csi.k8s.io
    readOnly: false
    volumeHandle: unique-volumeid  # make sure it's a unique id in the cluster
    volumeAttributes:
      source: "//192.168.1.106/k8s"
      subDir: "postgres"
    nodeStageSecretRef:
      name: smb-credentials
      namespace: kube-system
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-data-claim
  namespace: home-db 
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  volumeName: postgres-data
  storageClassName: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-server
  namespace: home-db 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres-server
    spec:
      containers:
        - image: postgres:14-alpine
          name: postgres
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: postgres-vol
              mountPath: "/var/lib/postgresql/data"
              readOnly: false
      volumes:
        - name: postgres-vol
          persistentVolumeClaim:
            claimName: postgres-data-claim
      